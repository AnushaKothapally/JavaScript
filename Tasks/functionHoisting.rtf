{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Verdana;\f2\fswiss\fcharset0 ArialMT;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red45\green46\blue49;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 /* function declarations are hoisted on to the top of the scope. so that we can access them before get declared.\
\'97 functions defined using expressions are not hoisted.\
\'97 
\f1\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Hoisting applies to variable declarations and to function declarations.\

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \'97 variable declared will be hoisted to the top but variable defined are not hosted.\
\'97
\f2\fs28 \cf4 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Function declarations in JavaScript are hoisting the function definition. we can use the function before declare it:\

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
*/\
\
\
 var name;\
sayHi();\
function sayHi()\{\
console.log("Hi"+name);\
\}\
x()// Here, it will through x is not a function error\
var x=function()\{\
cosole.log(\'93How are you dear?\'94);\
\}\
(function ()\{\
   name=\'93XYZ\'94\
console.log("Hello"+name);\
\}())\
\
}