{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Consolas;
}
{\colortbl;\red255\green255\blue255;\red45\green46\blue49;\red255\green255\blue255;\red249\green250\blue251;
\red135\green135\blue135;\red210\green50\blue85;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 var obj = \{\
  USA: [\
    \{\
      'name': 'NE',\
      'clg': [\
        'UNO',\
        'UNMC',\
        'UPC'\
      ]\
    \},\
    \{\
      'name': 'lincoln',\
      'clg': [\
        'UNL'\
      ]\
    \}\
  ],\
  India: [\
    \{\
      'name': 'telangana',\
      'clg': [\
        'CBIT',\
        'VBIT'\
      ]\
    \},\
    \{\
      'name': 'AP',\
      'clg': [\
        'Spoorthy',\
        'vignan'\
      ]\
    \}\
  ]\
\};\
console.log("keys1"+Object.keys(obj));\
\
\
// Remove Duplicates using for-in\
var school = \{\
  'name': 'ZPHS',\
  'strength': '100',\
  'staff': '10',\
  'strength': '100'\
\};\
function removeduplicates(ob) \{\
  console.log('function called');\
  var temp = \{\
  \};\
  for (p in ob) \{\
    console.log('for' + p);\
    if (temp[p] == undefined) \{\
      temp["p"] = ob.p;\
      console.log('if' + p + '' + Object.keys(temp));\
    \}\
  \}\
  return temp;\
\}\
var o = removeduplicates(school);\
console.log('one' + o);\
console.log('keys2' + Object.keys(o));\
\
\
//We can delete a property using delete keyword.\
Delete will applies on its own properities. 
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If a property with the same name exists on the object's prototype chain, then, after deletion, the object will use the property from the prototype chain. non-cont\
\
//
\f2 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Object\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 .\cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 getOwnPropertyDescriptor\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 (Obj, Properity)\'97 \
\
non-configurable properities can\'92t be deleted.\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
var obj=\{name:"XYZ"\};\
Object.defineProperty(obj, 'name',\{configurable:false\});\
console.log(delete obj.name);\
it would return false here. in \'93use strict\'94 mode syntax error will be raised\
undefined\
In Array, if we delete element the value will be removed,&undefined but length of the array is not changed.\
}